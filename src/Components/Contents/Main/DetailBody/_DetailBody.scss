@import '../../../../scss/variables';

/////////////////// DETAIL ///////////////
.detail {

    display: flex;
    padding: 4.5rem;
    background-color: var(--color-grey-light-1);
    border-bottom: var(--line);
    font-size: 1.4rem;

    @media only screen and (max-width: $bp-middle) {
        padding: 3rem;
    }

    @media only screen and (max-width: $bp-middle-small) {
        flex-direction: column;
    }

    &__description {
        background-color: #ffffff;
        box-shadow: var(--shadow-light);
        padding: 3rem;

        flex: 0 0 60%;
        margin-right: 4.5rem;

        @media only screen and (max-width: $bp-middle) {
            padding: 2rem;
            margin-right: 3rem;
        }

        @media only screen and (max-width: $bp-middle-small) {
            margin-bottom: 3rem;
            margin-right: 0;
        }

        &__paragraph {
            // Regardless of className, the second paragraph is not 
            // a last child in the container. 
            // Therefore, it has the margin-bottom.
            // In this case, we must use "last-of-type"
            // &:not(:last-child) { }
            
            // "last-of-type" applies the last of the same type in the container.
            &:not(:last-of-type) {
                margin-bottom: 2rem;
            }
        }

        &__list {

            list-style: none;
            margin: 3rem 0;
            padding: 3rem 0;
            border-top: var(--line);
            border-bottom: var(--line);

            display: flex;
            // [ IMPORTANT ]
            // Orginize list in a given space
            flex-wrap: wrap;
            align-items: center;


            &__item {
                // [ IMPORTANT ]
                // separate a row to a half and half
                // in a given space
                flex: 0 0 50%;

                // In this case, we can use "last-child"
                //  because in the container, it has the last child with "item" class
                &:not(:last-child) {
                    margin-bottom: .7rem;
                }
                // [ IMPORTANT ] 
                // deploying svg icon directly
                &::before {
                    content: "";

                    // If it is not a text or something in defined by HTML,
                    // we need to gain a space first
                    display: inline-block;
                    height: 1rem;
                    width: 1rem;
                    margin-right: .7rem;

                    // Old browser -- we will use this one for the feature supporting
                    // : can't change the color
                    background-image: url(../img/chevron-thin-right.svg); 
                    background-size: cover;

                    // if -webkit-mask-image: url() is supported currently
                    //  or  (mask-image: url()) supported in the future
                    @supports (-webkit-mask-image: url()) or (mask-image: url()) {

                        // Newer Browser
                        // We should mask. It is very similar clip or clipper we used.
                        
                        // define the entire space first like clip
                        // mask is for changing color for image we cannot change by using normal css
                        background-color: var(--color-primary);
                        -webkit-mask-image: url(../img/chevron-thin-right.svg);
                        -webkit-mask-size: cover;
                        // In the future, when the other browser starts supporing mask,
                        // they can use this one.  
                        mask-image: url(../img/chevron-thin-right.svg);
                        mask-size: cover;
                        // when we activate 
                        /* 
                            background-image: url(../img/chevron-thin-right.svg); 
                            background-size: cover; 
                        */ // above
                        // It generates an balckk black background image. We need to turn it off.
                        background-image: none;
                    }
                }

            }

        }

        &__recommend {

            font-size: 1.3rem;
            color: var(--color-grey-dark-3);

            display: flex;
            // justify-content: space-between;
            align-items: center;

            @media only screen and (max-width: $bp-middle-small) {
                flex-wrap: wrap;
                justify-content: center;
            }

            &__count {
                margin-right: auto;

                @media only screen and (max-width: $bp-middle-small) {
                    margin: 0;
                    margin-bottom: 1.5rem;                    
                }
            }

            &__friends {

                &__photo {
                    height: 4rem;
                    width: 4rem;
                    border-radius: 50%;
                    
                    // To add border size additonally to to the height and width  
                    // Then, the picture size here not effected by border

                    // [FYI] box-sizing: border-box ---> it does not add the border size.
                    // Therefore, the picture size shrinks.
                    box-sizing: content-box;
                    border: 3px solid #ffffff;

                    &:not(:last-child) {
                        margin-right: -2.0rem;
                    }
                }
            }
        }
    }

    ///////////////////////////// Review /////////////////////////////
    &__user-reviews {
        // fully take up the rest of the space, 40%
        flex: 1;

        display: flex;
        flex-direction: column;

        //  [ IMPORTANT ]
        // In this case, it is a center in horizontal
        // for figure 1, figure 2, and button 
        // (not the nested chidren of figure 1 and figure 1)
        align-items: center;

        &__review {            
            background-color: yellowgreen;
            box-shadow: var(--shadow-light);
            padding: 3rem;
            margin-bottom: 3.5rem;
            position: relative;
            overflow: hidden;

            // Visit: "https://css-tricks.com/snippets/html/glyphs/"
            // we can use left quotation mark
            /* 
                p:before { content:"\201C";}
            */

            @media only screen and (max-width: $bp-middle) {
                padding: 2rem;
                margin-bottom: 3rem;
            }

            @media only screen and (max-width: $bp-middle-small) {
                // When sentence is smaller than the given space
                width: 100%;

                //  flex 1 is here for height because it is column
                // flex: 1;
            }

            &::before {
                content: "\201C";
                position: absolute;
                top: -2.15rem;
                left: 0;
                font-size: 20rem;
                // [ IMPORTANT ]!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1
                // without line-height definition,
                //  it is still 1.6rem that is stretched 1.6 times than "20 rem" above
                // We must override line-height here to the value from body element that defines line-height: 1.6;
                line-height: 1;
                color: var(--color-grey-light-2);
                font-family: sans-serif;
                z-index: 1;
            }

            &__text {
                position: relative;
                z-index: 10;
                margin-bottom: 2rem;

            }

            &__user {
                display: flex;
                align-items: center;

                &__photo {

                    height: 4.5rem;
                    width: 4.5rem;
                    border-radius: 50%;
                    margin-right: 1.5rem;
                }

                &__user-box {
                    margin-right: auto;
                    
                    &__user-name {
                        font-size: 1.1rem;
                        font-weight: 600;
                        text-transform: uppercase;
                        margin-bottom: .4rem;
                    }

                    &__date {   
                        font-size: 1rem;
                        color: var(--color-grey-dark-3);
                    }
                }

                &__rating {
                    color: var(--color-primary);
                    font-size: 2.2rem;
                    font-weight: 300;

                }

            }
        }
    }
}

    /////////////////////////////////////// CALL TO ACTION //////////////////
.cta {
    padding: 3.5rem 0;
    text-align: center;

    @media only screen and (max-width: $bp-middle) {
        padding: 2.5rem 0;
    }

    &__book-now {
        font-size: 2rem;
        font-weight: 300;
        text-transform: uppercase;
        margin-bottom: 2.5rem;

    }
}