.header {
    font-size: 1.4rem;
    min-height: 7rem;
    background-color: #ffffff;
    border-bottom: var(--line);

    display: flex;
    // alocate flex box items
    justify-content: space-between;

    // allocate contents insid of items
    align-items: center;
}

// it is inside of header but it is defined as a separate component
.logo {
    height: 3.25rem;
    margin-left: 2rem;
}

//////////////////////////////////// SEARCH /////////////////////////////
.search {

    // middle one : flex
    flex: 0 0 40%;

    // we can always use 
    display: flex;
    // centerting contents insdie of items with y coordinate
    align-items: center;
    // centering items tags with x coordinate 
    justify-content: center;

    &__input {
        // <input /> does not have automatic inherit for the parent.
        // Therefore, we need to maually inherit it from the parent. 
        font-family: inherit;
        font-size: inherit;
        color: inherit;
        background-color: var(--color-grey-light-2);
        border: none;
        padding: .7rem 2rem;
        border-radius: 100px;
        width: 90%;
        // by doing so below, the search button can be on top of input bar
        margin-right: -3.5rem;
        transition: all .2s;

        &:focus {
            // outline: when we click input, it generates a html outline.
            outline: none;
            width: 100%;
            background-color: var(--color-grey-light-3);
        }

        // only working with webkib browser such as chrome and safari
        &::-webkit-input-placeholder {
            font-weight: 100;
            color: var(--color-grey-light-4);
        }
    }

    &__button {

        border: none;
        // to matched the color with input bar
        background-color: var(--color-grey-light-2);

        &:focus {
            outline: none;

            // ****we cannot control it over here. 
            // background-color: var(--color-grey-light-3);

        }

        &:active {
            // animation that move down little bit when it is clicked
            transform: translateY(2px);
        }

        &__icon {
            height: 2rem;
            width: 2rem;
            // to chnage svg icon's color
            fill: var(--color-grey-dark-3);
        }
    }

    // input and button are sibling
    &__input:focus + &__button {
        background-color: var(--color-grey-light-3);
    }
}

//////////////////////////////////// USER NAVIGATION /////////////////////////////
.user-nav {
    // it is an item of header''s flex
    // stretch fulfilles the space
    // ********* [IMPORTANT] **************
    // align-self is to override the position that is defined in the parent
    // It is defined actually in "align-items: center" in hearder class
    // But we can redefine the position over here
    align-self: stretch;

    display: flex;
    // justify-content: space-between;
    // align-items: center;

    // only direct children of "user-nav"
    & > * {
        // we can still padding instead of "justify-content: space-between;"
        // when sapce is not enough****
        padding: 0 2rem;
        cursor: pointer;

        display: flex;
        align-items: center;

    }

    // simliar to control the children or direct child when using pseudo
    & > *:hover {
        background-color: var(--color-grey-light-2);
    }

    &__icon-box {

        position: relative;
        
        &__icon {
            height: 2.25rem;
            width: 2.25rem;
            fill: var(--color-grey-dark-2)
        }

        &__notification {
            font-size: .8rem;
            height: 1.75rem;
            width: 1.75rem;
            border-radius: 50%;
            background-color: var(--color-primary);
            color: #ffffff;
            position: absolute;
            top: 1.5rem;
            right: 1.1rem;

            // [IMPORTANT] Even flex box container is working with the last node which is text here
            display: flex;
            justify-content: center;
            align-items: center; 
            
        }
    }

    &__user {

        // [ IMPORTANT ]display flex can be used only for itself (which is a parent) 
        // Then, it can allocate the contents inside of the parent by using align-content
        // display: flex;
        // align-items: center;

        &__photo {
            height: 3.75rem;
            border-radius: 50%;
            margin-right: 1rem;
        }

    }

}