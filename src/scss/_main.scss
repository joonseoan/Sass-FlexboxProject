@import '../Components/App';

:root {
    --color-primary: #eb2f64;
    --color-primary-light: #FF3366;
    --color-primary-dark: #BA265D;
    
    --color-grey-light-1: #faf9f9;
    --color-grey-light-2: #f4f2f2;
    --color-grey-light-3: #f0eeee;
    --color-grey-light-4: #ccc;
    
    --color-grey-dark-1: #333;
    --color-grey-dark-2: #777;
    --color-grey-dark-3: #999;

    // shadow dark
    --shadow-dark: 0 2rem 6rem rgba(0,0,0,.3);
    --shadow-light: 0 2rem 5rem rgba(0,0,0,.06);

    --line: 1px solid var(--color-grey-light-2);
}

/////////////////// Button ////////////////////

.btn-inline {
    border: none;
    color: var(--color-primary);
    // from html font-size which is 62.5%
    font-size: inherit;
    // border uses the exactly same text color.
    border-bottom: 1px solid currentColor;
    padding-bottom: 2px;
    display: inline-block;
    background-color: transparent;
    cursor: pointer;
    transition: all .2s;

    // The way get html tag inside of class-based component
    // It is only for "Show All Button"
    & span {
        margin-left: 3px;
        // all elements for instance background color, or margin-left from psuedo
        // Then, in this case, color inside of hover changes first
        // Then, span will work in the second. 


        // if we put all insead of margin-left, the color change and margin-left 
        //  will work at the same time.
        transition: margin-left .2s;
    }

    // pseudo hover is from "btn-linine"
    &:hover {
        color: var(--color-grey-dark-1);
        // span is from inside of hover of btn-inline
        & span {
            margin-left: 8px;
        }
    }

    &:focus {
        outline: none;
        // infinit: repeat the animation over an over.
        animation: pulsate 1s infinite;
    }  
}

/// Without the event, we can make animation
// "pulsate" is a variable name
@keyframes pulsate {

    0% {
        transform: scale(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.05); // larger than the defined one
        box-shadow: 0 1rem 4rem rgba(0,0,0,.25);
    }

    100% {
        transform: scale(1);
        box-shadow: none;
    }
}

.btn {
    // FYI, cta class which is a parent has text-align: center;
    font-size: 1.5rem;
    font-weight: 300;
    text-transform: uppercase;
    border-radius: 100px;
    border: none;
    background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
    color: #ffffff;

    position: relative;

    // [IMPORTANT]
    // It is another way to no display
    // because invisible is now overflow the btn calss!!!!
    overflow: hidden;
    
    cursor: pointer;

    & > * {
        display: inline-block;
        height: 100%;
        width: 100%;
        transition: all .2s;
    }

    &__visible {
        padding: 2rem 7.5rem;        
    }

    &__invisible {
        // [IMPORTANT] width 7.5rem is not working! here why?
        // padding: 2rem 7.5rem;
        padding: 2rem 0;
        position: absolute;
        // making beyond the top of the button
        top: -100%;
        left: 0;
    }

    &:hover {
        background-image: linear-gradient(to left, var(--color-primary-light), var(--color-primary-dark));
    }


    // pseudo + controlling children
    &:hover &__visible {
        // because of overflow:hidden above, it is also not displayed 
        transform: translateY(100%);
        // [IMPORTANT]
        // It conflicts with the one invisible
        // position: absolute;
        // top: -100%;
    }

    &:hover &__invisible {
        // because of padding: 2red 0 above
        // we should not use top: 50%;
        top: 0;
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }

}



